[GENERAL]
# These directories are used at FR-Hes to treat raw data.
# There are only examples that users can put their own sections
# into the config file
#
# base path to which all other directories are relative to 
# str
datadir  = .
# outdir is relative to datadir
# str
outdir   = .

[DB1FILES]
# These files are used at FR-Hes to treat the raw data in physical units.
# There are here only as examples.
# str
eddypro        = DB1/2016/eddypro_full_output_2016_corrige.csv
eddypro_last   = DB1/2015/eddypro_full_output_2015.csv.csv
eddypro_next   = DB1/2017/eddypro_full_output_2017.csv
meteo          = DB1/2016/CR3000_NT_moyennes_2016_corrige_DB1.csv
meteo_last     = DB1/2015/CR3000_NT_moyennes_2015_DB1.csv
meteo_next     = DB1/2017/CR3000_NT_moyennes_2017_DB1.csv

#
# Here starts the configuration for post-processing data, assumed to be in the
# format defined by the ICOS precursor europe-flaxdata.eu:
# http://www.europe-fluxdata.eu/home/guidelines/how-to-submit-data/general-information
#

[POSTSWITCH]
# spike detection (Papale et al., Biogeoci 2006)
# bool
outlier   = True
# ustar filtering (Papale et al., Biogeoci 2006)
# bool
ustar     = True
# flux partitioning (Reichstein et al., GCB 2005; Lasslop et al., GCB 2010)
# bool
partition = True
# gap filling (Reichstein et al., GCB 2005)
# bool
fill      = True
# error estimate of Eddy fluxes (Lasslop et al., Biogeosci 2008)
# bool
fluxerr   = False

[POSTIO]
# can be comma separated list or single file
# str
inputfile  = FR-Hes_europe-fluxdata_2016.txt
# see strftime documentation of Python's datetime module
# https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior
# str
timeformat  = %Y%m%d%H%M
# Delimter to use with pandas.read_csv. If None, Pythonâ€™s builtin sniffer tool is used (slow)
# https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html
# str
sep         = ,
# Line numbers to skip (0-indexed) or number of lines to skip (int) at the start of the file.
# https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html
# list-like, int
skiprows    = None
# values being NaN and undef will be ignored
# float
undef       = -9999.
# threshold of shortwave radiation for determining day/night. day is SW_IN > swthr
# float
swthr       = 10.
# if empty, write will ask for output path using the name of this config file with the suffix .csv
# str
outputfile  = FR-Hes_europe-fluxdata_2016-post.txt
# if True, set variable to undef where flagged in output
# bool
outundef    = True
# if True, add flag columns prepended with flag_ for each variable
# bool
outflagcols = False

[POSTMAD]
# spike / outlier detection, see help(hesseflux.madspikes)
# scan window in days for spike detection
# int
nscan = 15
# fill window in days for spike detection
# int
nfill = 1
# spike will be set for values above z absolute deviations
# float
z     = 7.
# 0: mad on raw values; 1, 2: mad on first or second derivatives
# int
deriv = 2

[POSTUSTAR]
# ustar filtering, see help(hesseflux.ustarfilter)
# min ustar value. Papale et al. (Biogeosci 2006): 0.1 forest, 0.01 else
# float
ustarmin    = 0.1
# number of boostraps for determining uncertainty of ustar threshold. 1 = no bootstrap
# int
nboot       = 1
# significant difference between ustar class and mean of classes above
# float
plateaucrit = 0.95

[POSTGAP]
# gap-filling with MDS, see help(hesseflux.gapfill)
# max deviation of SW_IN
# float
sw_dev  = 50.
# max deviation of TA
# float
ta_dev  = 2.5
# max deviation of VPD
# float
vpd_dev = 5.0
# avoid extrapolation in gaps longer than longgap days
# int
longgap = 60

[POSTPARTITION]
# partitioning, see help(hesseflux.nee2gpp)
# if True, set GPP=0 at night
# bool
nogppnight = False
